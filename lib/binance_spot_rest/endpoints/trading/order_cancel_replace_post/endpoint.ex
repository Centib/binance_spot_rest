defmodule BinanceSpotRest.Endpoints.Trading.OrderCancelReplacePost.Endpoint do
  @moduledoc false

  def moduledoc do
    """
      ### Cancel an Existing Order and Send a New Order (TRADE)

    ```
    POST /api/v3/order/cancelReplace
    ```
    Cancels an existing order and places a new order on the same symbol.

    Filters and Order Count are evaluated before the processing of the cancellation and order placement occurs.

    A new order that was not attempted (i.e. when `newOrderResult: NOT_ATTEMPTED` ), will still increase the order count by 1.

    **Weight:**
    1

    **Parameters - same as order**

    **Parameters - aditional (endpoint specific):**

    | Name                       | Type    | Mandatory | Description                                                                                                                                                                                                                                                                         |
    | -------------------------- | ------- | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | cancelReplaceMode          | ENUM    | YES       | The allowed values are: <br/> `STOP_ON_FAILURE` - If the cancel request fails, the new order placement will not be attempted. <br/> `ALLOW_FAILURE` - new order placement will be attempted even if cancel request fails.                                                           |
    | cancelNewClientOrderId     | STRING  | NO        | Used to uniquely identify this cancel. Automatically generated by default.                                                                                                                                                                                                          |
    | cancelOrigClientOrderId    | STRING  | NO        | Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.                                                                                                                                                   |
    | cancelOrderId              | LONG    | NO        | Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.                                                                                                                                                   |
    | cancelRestrictions         | ENUM    | NO        | Supported values: <br>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`. For more information please refer to [Regarding `cancelRestrictions`](#regarding-cancelrestrictions) |
    | orderRateLimitExceededMode | ENUM    | No        | Supported values: <br> `DO_NOTHING` (default)- will only attempt to cancel the order if account has not exceeded the unfilled order rate limit<br> `CANCEL_ONLY` - will always cancel the order                                                                                     |

    Similar to `POST /api/v3/order`, additional mandatory parameters are determined by `type`.

    Response format varies depending on whether the processing of the message succeeded, partially succeeded, or failed.

    **Data Source:**
    Matching Engine

    Full docs: [Binance API â€“ order/cancelReplace](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#cancel-an-existing-order-and-send-a-new-order-trade)
    """
  end

  def metadata do
    %BinanceSpotRest.Query.EndpointMetadata{
      endpoint: "/api/v3/order/cancelReplace",
      method: BinanceSpotRest.Enums.Method._post(),
      security_type: BinanceSpotRest.Enums.SecurityType._TRADE()
    }
  end
end
