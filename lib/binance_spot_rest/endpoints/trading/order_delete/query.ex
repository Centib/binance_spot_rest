defmodule BinanceSpotRest.Endpoints.Trading.OrderDelete.Query do
  @moduledoc """
  Order (delete)

  ### Cancel order (TRADE)

  ```
  DELETE /api/v3/order
  ```

  Cancel an active order.

  **Weight:**
  1

  **Parameters:**

  | Name               | Type   | Mandatory | Description                                                                                                                                                                    |
  | ------------------ | ------ | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
  | symbol             | STRING | YES       |                                                                                                                                                                                |
  | orderId            | LONG   | NO        |                                                                                                                                                                                |
  | origClientOrderId  | STRING | NO        |                                                                                                                                                                                |
  | newClientOrderId   | STRING | NO        | Used to uniquely identify this cancel. Automatically generated by default.                                                                                                     |
  | cancelRestrictions | ENUM   | NO        | Supported values: <br>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`. |
  | recvWindow         | LONG   | NO        | The value cannot be greater than `60000`.                                                                                                                                      |
  | timestamp          | LONG   | YES       |                                                                                                                                                                                |

  Either `orderId` or `origClientOrderId` must be sent.
  If both parameters are sent, `orderId` takes precedence.

  **Data Source:**
  Matching Engine

  **Response:**

  ```
  {
    "symbol": "LTCBTC",
    "origClientOrderId": "myOrder1",
    "orderId": 4,
    "orderListId": -1, // Unless it's part of an order list, value will be -1
    "clientOrderId": "cancelMyOrder1",
    "transactTime": 1684804350068,
    "price": "2.00000000",
    "origQty": "1.00000000",
    "executedQty": "0.00000000",
    "cummulativeQuoteQty": "0.00000000",
    "status": "CANCELED",
    "timeInForce": "GTC",
    "type": "LIMIT",
    "side": "BUY",
    "selfTradePreventionMode": "NONE"
  }
  ```

  **Note:** The payload above does not show all fields that can appear in the order response. Please refer to [Conditional fields in Order Responses](#conditional-fields-in-order-responses).

  **Regarding `cancelRestrictions`**

  - If the `cancelRestrictions` value is not any of the supported values, the error will be:

  ```
  {
    "code": -1145,
    "msg": "Invalid cancelRestrictions"
  }
  ```

  - If the order did not pass the conditions for `cancelRestrictions`, the error will be:

  ```
  {
    "code": -2011,
    "msg": "Order was not canceled due to cancel restrictions."
  }
  ```
  """

  defstruct [
    :symbol,
    :orderId,
    :origClientOrderId,
    :newClientOrderId,
    :cancelRestrictions,
    :recvWindow
  ]

  defimpl BinanceSpotRest.Query do
    def validate(q),
      do:
        q
        |> Valpa.string(:symbol)
        |> Valpa.map_inclusive_keys([:orderId, :origClientOrderId])
        |> Valpa.maybe_integer(:orderId)
        |> Valpa.maybe_string(:origClientOrderId)
        |> Valpa.maybe_string(:newClientOrderId)
        |> Valpa.maybe_value_of_values(
          :cancelRestrictions,
          BinanceSpotRest.Enums.CancelRestrictions.values()
        )
        |> Valpa.maybe_integer_in_range(:recvWindow, %{min: 0, max: 60_000})

    def prepare(q),
      do: %BinanceSpotRest.Query.RequestSpec{
        metadata: %BinanceSpotRest.Query.EndpointMetadata{
          endpoint: "/api/v3/order",
          method: BinanceSpotRest.Enums.Method._delete(),
          security_type: BinanceSpotRest.Enums.SecurityType._TRADE()
        },
        query: q
      }
  end
end
